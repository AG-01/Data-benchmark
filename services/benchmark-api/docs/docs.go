// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.example.com/support",
            "email": "support@example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/benchmarks": {
            "get": {
                "description": "Get a list of all benchmarks with optional filtering",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "benchmarks"
                ],
                "summary": "List all benchmarks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by table format",
                        "name": "table_format",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Limit number of results",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Benchmark"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new benchmark configuration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "benchmarks"
                ],
                "summary": "Create a new benchmark",
                "parameters": [
                    {
                        "description": "Benchmark configuration",
                        "name": "benchmark",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Benchmark"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Benchmark"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/benchmarks/{id}": {
            "get": {
                "description": "Get a specific benchmark by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "benchmarks"
                ],
                "summary": "Get a benchmark by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Benchmark ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Benchmark"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing benchmark configuration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "benchmarks"
                ],
                "summary": "Update a benchmark",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Benchmark ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated benchmark configuration",
                        "name": "benchmark",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Benchmark"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Benchmark"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a benchmark by ID",
                "tags": [
                    "benchmarks"
                ],
                "summary": "Delete a benchmark",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Benchmark ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/benchmarks/{id}/results": {
            "get": {
                "description": "Get aggregated results for a benchmark",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "benchmarks"
                ],
                "summary": "Get benchmark results",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Benchmark ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Result"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/benchmarks/{id}/run": {
            "post": {
                "description": "Start executing all queries in a benchmark across specified engines",
                "tags": [
                    "benchmarks"
                ],
                "summary": "Run a benchmark",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Benchmark ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/benchmarks/{id}/status": {
            "get": {
                "description": "Get the current status of a benchmark execution",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "benchmarks"
                ],
                "summary": "Get benchmark status",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Benchmark ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Check if the service is healthy",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/ready": {
            "get": {
                "description": "Check if the service is ready to accept requests",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Readiness check endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Benchmark": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "dataset_name": {
                    "type": "string"
                },
                "dataset_size": {
                    "description": "\"small\", \"medium\", \"large\"",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "engines": {
                    "description": "JSON array of engine names",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "queries": {
                    "description": "Relationships",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Query"
                    }
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Result"
                    }
                },
                "status": {
                    "description": "\"created\", \"running\", \"completed\", \"failed\"",
                    "type": "string"
                },
                "table_format": {
                    "description": "\"hive\" or \"iceberg\"",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Query": {
            "type": "object",
            "properties": {
                "benchmark": {
                    "description": "Relationships",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Benchmark"
                        }
                    ]
                },
                "benchmark_id": {
                    "type": "integer"
                },
                "complexity": {
                    "description": "\"simple\", \"medium\", \"complex\"",
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "executions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.QueryExecution"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "query_type": {
                    "description": "\"select\", \"aggregation\", \"join\", \"window\"",
                    "type": "string"
                },
                "sql_query": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.QueryExecution": {
            "type": "object",
            "properties": {
                "bytes_processed": {
                    "type": "integer"
                },
                "cpu_usage": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "engine": {
                    "type": "string"
                },
                "error_message": {
                    "type": "string"
                },
                "execution_time_ms": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "io_read_bytes": {
                    "type": "integer"
                },
                "io_write_bytes": {
                    "type": "integer"
                },
                "memory_usage": {
                    "type": "integer"
                },
                "query": {
                    "description": "Relationships",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Query"
                        }
                    ]
                },
                "query_id": {
                    "type": "integer"
                },
                "query_plan": {
                    "type": "string"
                },
                "rows_processed": {
                    "type": "integer"
                },
                "start_time": {
                    "type": "string"
                },
                "status": {
                    "description": "\"pending\", \"running\", \"completed\", \"failed\"",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Result": {
            "type": "object",
            "properties": {
                "avg_cpu_usage": {
                    "type": "number"
                },
                "avg_execution_time_ms": {
                    "type": "number"
                },
                "avg_memory_usage": {
                    "type": "number"
                },
                "benchmark": {
                    "description": "Relationships",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Benchmark"
                        }
                    ]
                },
                "benchmark_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "efficiency_score": {
                    "description": "custom metric",
                    "type": "number"
                },
                "engine": {
                    "type": "string"
                },
                "failed_queries": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "max_execution_time_ms": {
                    "type": "number"
                },
                "min_execution_time_ms": {
                    "type": "number"
                },
                "successful_queries": {
                    "type": "integer"
                },
                "table_format": {
                    "type": "string"
                },
                "throughput": {
                    "description": "queries per second",
                    "type": "number"
                },
                "total_bytes_processed": {
                    "type": "integer"
                },
                "total_io_read_bytes": {
                    "type": "integer"
                },
                "total_io_write_bytes": {
                    "type": "integer"
                },
                "total_queries": {
                    "type": "integer"
                },
                "total_rows_processed": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Data Lake Benchmark API",
	Description:      "API for benchmarking data lake table formats across multiple query engines",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
